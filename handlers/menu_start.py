import logging
import random

import datetime
from aiogram import types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, \
    ReplyKeyboardRemove, KeyboardButton, ReplyKeyboardMarkup
import time
from main import dp, bot, db, config, Tools
admin = config()['telegram']['admin']

"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
"""


async def start(message: types.Message):
    user = message.from_user.id

    # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
    if not db.check_users_user_exists(user):

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        reg_time = time.timenow()
        db.add_users_user(
            user,
            f'tg://user?id={user}',
            reg_time,
            message.from_user.username,
            message.from_user.first_name,
            message.from_user.last_name
        )
        text = f'\nüôãüèª‚Äç‚ôÇÔ∏è–ù–æ–≤—ã–π –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å:' \
               f'\n' \
               f'\n<b>{message.from_user.first_name} {message.from_user.last_name}</b>' \
               f'\n@{message.from_user.username}' \
               f'\nid <a href="tg://user?id={user}">{user}</a>' \
               f'\n' \
               f'\n<code>{reg_time}</code>'

        await bot.send_message(admin, text)
        db.set_users_mode(user, 0, 'start')

    first = int(db.get_users_first_message(user))
    last = int(db.get_users_last_message(user)) + 1
    db.set_users_first_message(user, 0)
    db.set_users_last_message(user, 0)

    # –î–µ–π—Å—Ç–≤–∏–µ:
    db.set_users_mode(user, 0, 'start')


    message_obj = await bot.send_message(
        chat_id=user,
        text=f"<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã\n"
<<<<<<< Updated upstream
                f"\n"
                f"–ù–∞ —Å–≤—è–∑–∏ ‚ú®<b>food2mood</b>‚ú® - —Å–µ—Ä–≤–∏—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –±–ª—é–¥ –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòÉüçΩÔ∏è\n\n"
                f"–ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç food2mood –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –ø–æ–∑–∏—Ü–∏–∏ –º–µ–Ω—é –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ–¥–±–æ—Ä–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! ‚ù§Ô∏è\n\n"
                f"<b>–í—ã–±–∏—Ä–∞–π —Å–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º! ‚ö°Ô∏è\n\n</b>"
                f'<b>–ö–æ–º–∞–Ω–¥—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–µ–Ω—é:"</b>\n'
                f"<i>/start - –∑–∞–ø—É—Å–∫ food2mood\n</i>"
                f"<i>/form - —Ç–µ—Å—Ç –Ω–∞ –≤—ã—è–≤–ª–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –≤–∫—É—Å–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π\n</i>"
                f"<i>/f2m_coins - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–π –≤–∞–ª—é—Ç–µ, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n</i>"
                f"\n",
=======
             f"\n"
             f"–ù–∞ —Å–≤—è–∑–∏ ‚ú®<b>food2mood</b>‚ú® - –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –µ–¥—ã –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üëæüçΩÔ∏è\n\n"
             f"Food2mood –æ–±—É—á–µ–Ω–∞ –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –ø–∏—Ç–∞–Ω–∏—é. –û–Ω–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥–±–æ—Ä–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è!‚ù§Ô∏èÔ∏è\n\n"
             f"–ê –µ—â–µ food2mood —É–º–µ–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µüîç\n"
             f"<b>–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É ¬´–í—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ¬ª! –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º! ‚ö°Ô∏è\n\n</b>"
             f'<b>–ö–æ–º–∞–Ω–¥—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–µ–Ω—é:"</b>\n'
             f"<i>/start - –∑–∞–ø—É—Å–∫ food2mood\n</i>"
             f"<i>/form - —Ç–µ—Å—Ç –Ω–∞ –≤—ã—è–≤–ª–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –≤–∫—É—Å–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π\n</i>"
             f"<i>/f2m_coins - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–π –≤–∞–ª—é—Ç–µ, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n</i>"
             f"\n",
>>>>>>> Stashed changes
        parse_mode='HTML',
        reply_markup=buttons_start_02()
    )
    if int(db.get_users_first_message(user)) == 0:
        db.set_users_first_message(user, message_obj.message_id)
    db.set_users_last_message(user, message_obj.message_id)

    # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞:
    if int(db.get_users_first_message(user)) != 0:
        for i in range(first, last, 1):
            try:
                await bot.delete_message(user, int(i))
            except Exception as ex:
                pass

@dp.callback_query_handler(text_contains=f"menu_start")
async def menu_start(call: types.CallbackQuery):
    user = call.from_user.id
    db.set_users_mode(user, call.message.message_id, 'start')

    # –î–∞–Ω–Ω—ã–µ —á–∞—Ç–∞:
    try:
        await bot.delete_message(user, call.message.message_id)
    except:
        pass
    first = int(db.get_users_first_message(user))
    last = int(db.get_users_last_message(user)) + 1
    db.set_users_first_message(user, 0)
    db.set_users_last_message(user, 0)

    # –î–µ–π—Å—Ç–≤–∏–µ:
    db.set_users_mode(user, 0, 'start')

    try:
        sex = db.get_client_sex(user)
        age = db.get_client_age(user)
        style = db.get_client_style(user)
        blacklist = db.get_client_blacklist(user)
        if not (sex and sex != 'None'):
            db.set_client_sex(user, '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω ü§∑')
        if not (age and age != 'None'):
            db.set_client_age(user, '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω ü§∑')
        if not (style and style != 'None'):
            db.set_client_style(user, '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ')
        if not (blacklist and blacklist != 'None'):
            db.set_client_blacklist(user, '–ü—É—Å—Ç–æ')
    except Exception as e:
        print(e)

    message_obj = await bot.send_message(
        chat_id=user,
        text=f"<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã\n"
             f"\n"
<<<<<<< Updated upstream
             f"–ù–∞ —Å–≤—è–∑–∏ ‚ú®<b>food2mood</b>‚ú® - —Å–µ—Ä–≤–∏—Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –±–ª—é–¥ –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòÉüçΩÔ∏è\n\n"
             f"–ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç food2mood –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç –ø–æ–∑–∏—Ü–∏–∏ –º–µ–Ω—é –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ–¥–±–æ—Ä–∫—É —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è! ‚ù§Ô∏è\n\n"
             f"<b>–í—ã–±–∏—Ä–∞–π —Å–≤–æ—ë –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º! ‚ö°Ô∏è\n\n</b>"
=======
             f"–ù–∞ —Å–≤—è–∑–∏ ‚ú®<b>food2mood</b>‚ú® - –Ω–µ–π—Ä–æ—Å–µ—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –µ–¥—ã –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üëæüçΩÔ∏è\n\n"
             f"Food2mood –æ–±—É—á–µ–Ω–∞ –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –ø–æ –ø–∏—Ç–∞–Ω–∏—é. –û–Ω–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥–±–æ—Ä–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è!‚ù§Ô∏èÔ∏è\n\n"
             f"–ê –µ—â–µ food2mood —É–º–µ–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µüîç\n"
             f"<b>–ù–∞–∂–∏–º–∞–π –∫–Ω–æ–ø–∫—É ¬´–í—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ¬ª! –ú—ã –Ω–∞—á–∏–Ω–∞–µ–º! ‚ö°Ô∏è\n\n</b>"
>>>>>>> Stashed changes
             f'<b>–ö–æ–º–∞–Ω–¥—ã –≤ —Ä–∞–∑–¥–µ–ª–µ "–ú–µ–Ω—é:"</b>\n'
             f"<i>/start - –∑–∞–ø—É—Å–∫ food2mood\n</i>"
             f"<i>/form - —Ç–µ—Å—Ç –Ω–∞ –≤—ã—è–≤–ª–µ–Ω–∏–µ —Ç–≤–æ–∏—Ö –≤–∫—É—Å–æ–≤—ã—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π\n</i>"
             f"<i>/f2m_coins - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—à–µ–π –≤–∞–ª—é—Ç–µ, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å –Ω–∞ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n</i>"
             f"\n",
        reply_markup=buttons_start_02()
    )

    if int(db.get_users_first_message(user)) == 0:
        db.set_users_first_message(user, message_obj.message_id)
    db.set_users_last_message(user, message_obj.message_id)

    # –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞:
    if int(db.get_users_first_message(user)) != 0:
        for i in range(first, last, 1):
            try:
                await bot.delete_message(user, int(i))
            except Exception as ex:
                pass


def buttons_start_01():
    menu = InlineKeyboardMarkup(row_width=1)

    btn1 = InlineKeyboardButton(text="–ó–ê–ü–û–õ–ù–ò–¢–¨ –ê–ù–ö–ï–¢–£ üìã",
                                callback_data="client_register")

    menu.add(btn1)

    return menu



def buttons_start_02():
    menu = InlineKeyboardMarkup(row_width=1)

    btn1 = InlineKeyboardButton(text="–í—ã–±—Ä–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ",
                                callback_data="food_mood")

    # btn2 = InlineKeyboardButton(text="–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ üìã",
    #                             callback_data="client_register_again")
    #
    # btn3 = InlineKeyboardButton(text="–ú–æ–∏ f2m –∫–æ–∏–Ω—ã ü™ô",
    #                             callback_data="food_to_mood_coin_status")

    menu.add(btn1)
    # menu.add(btn2)
    # menu.add(btn3)

    return menu

"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
"""

